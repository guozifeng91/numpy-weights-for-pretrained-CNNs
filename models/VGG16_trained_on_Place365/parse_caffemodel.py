# parsing caffe model to npy (numpy) array from .pb (.caffemodel) file
#
# this example needs the caffe proto file
# https://github.com/BVLC/caffe/blob/master/src/caffe/proto/caffe.proto
#
# and the protobuf library
# https://github.com/protocolbuffers/protobuf
# https://github.com/protocolbuffers/protobuf/releases
#
# the installation of protobuf library need both the compiled protoc.exe and the python library, they need to have the same version.
#
# after installing all dependencies, this code is an example of how to parse caffemodel
#
# the code is implemented based on this answer
# https://stackoverflow.com/questions/37572948/extracting-weights-from-caffemodel-without-caffe-installed-in-python
#
# the CNN example used in this code is VGG16-Place365
# https://github.com/CSAILVision/places365

import numpy as np
import sys, os
import caffe_pb2 as cq
# caffe_pb2 is the .py file generated by protoc.exe and caffe.proto

# parse the NetParameter file
with open('vgg16_places365.caffemodel', 'rb') as f:
    cq2 = cq.NetParameter()
    cq2.ParseFromString(f.read())

# all layers that contain weights
for l in cq2.layer:
    if hasattr(l,'blobs'):
        if len(l.blobs)>0:
            print(l.name)

# write the parsed result into npy files (packed in one zipfile)
import zipfile
import io

def _to_npy_str(arr):
    bio=io.BytesIO()
    np.save(bio,arr)
    arr=bio.getvalue()
    bio.close()
    return arr
    
with zipfile.ZipFile('weights.zip','w') as f:
    for l in cq2.layer:
        if hasattr(l,'blobs'):
            if len(l.blobs)>0:
                name = l.name
                
                count=0
                for b in l.blobs:
                    data=np.array(b.data,dtype=np.float32)
                    shape=np.array(b.shape.dim,dtype=np.int32)
                    
                    data=data.reshape(shape)
                    data=_to_npy_str(data)
                    
                    save_name=name+('-%d.npy'%count)
                    count+=1
                    
                    f.writestr(save_name,data)
                    
                    print(save_name)

# parse the mean file
# note that the channels for caffe model are BGR not RGB
# https://github.com/BVLC/caffe/wiki/Image-Format:-BGR-not-RGB
with open('places365CNN_mean.binaryproto', 'rb') as f:
    cq3 = cq.BlobProto()
    cq3.ParseFromString(f.read())

mean_img=np.array(cq3.data).reshape((cq3.channels,cq3.height,cq3.width))
np.save('places365CNN_mean.npy',mean_img)